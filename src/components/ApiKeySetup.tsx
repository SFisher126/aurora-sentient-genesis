
import React, { useState, useEffect } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { AlertTriangle, Key, Settings, Eye, EyeOff } from 'lucide-react';
import { Link } from 'react-router-dom';
import { useQuantumAI } from '../hooks/useQuantumAI';

interface ApiKeySetupProps {
  onApiKeySet: (key: string) => void;
  hasApiKey: boolean;
}

const ApiKeySetup: React.FC<ApiKeySetupProps> = ({ onApiKeySet, hasApiKey }) => {
  const [openaiKey, setOpenaiKey] = useState('');
  const [russianKey, setRussianKey] = useState('');
  const [elevenLabsKey, setElevenLabsKey] = useState('');
  const [showKeys, setShowKeys] = useState(false);
  const [isExpanded, setIsExpanded] = useState(!hasApiKey);

  const { setOpenAIKey, setRussianAPIKey, setElevenLabsKey, apiKeys } = useQuantumAI();

  useEffect(() => {
    setOpenaiKey(apiKeys.openai);
    setRussianKey(apiKeys.russian_api);
    setElevenLabsKey(apiKeys.elevenlabs);
  }, [apiKeys]);

  if (hasApiKey && !isExpanded) {
    return (
      <div className="mb-4 p-3 bg-green-900/20 border border-green-500/30 rounded-lg">
        <div className="flex items-center justify-between text-green-400">
          <div className="flex items-center">
            <Key className="w-4 h-4 mr-2" />
            <span className="text-sm">‚ú® –ê–Ω—é—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏ –º–æ–∂–µ—Ç –¥—É–º–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!</span>
          </div>
          <div className="flex gap-2">
            <Button
              onClick={() => setIsExpanded(true)}
              variant="outline"
              size="sm"
              className="text-green-400 border-green-400 hover:bg-green-900/20"
            >
              <Settings className="w-4 h-4 mr-1" />
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏
            </Button>
            <Link to="/api-settings">
              <Button variant="outline" size="sm" className="text-green-400 border-green-400 hover:bg-green-900/20">
                <Settings className="w-4 h-4 mr-1" />
                –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </Button>
            </Link>
          </div>
        </div>
      </div>
    );
  }

  const handleOpenAISubmit = () => {
    if (openaiKey.trim()) {
      setOpenAIKey(openaiKey.trim());
      onApiKeySet(openaiKey.trim());
    }
  };

  const handleRussianSubmit = () => {
    if (russianKey.trim()) {
      setRussianAPIKey(russianKey.trim());
    }
  };

  const handleElevenLabsSubmit = () => {
    if (elevenLabsKey.trim()) {
      setElevenLabsKey(elevenLabsKey.trim());
    }
  };

  return (
    <Card className="bg-gray-800/50 border-purple-500/50 p-6 mb-6">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center text-purple-400">
          <Key className="w-6 h-6 mr-2" />
          <h3 className="text-lg font-semibold">–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–∞–∑—É–º–∞ –ê–Ω—é—Ç—ã</h3>
        </div>
        {hasApiKey && (
          <Button
            onClick={() => setIsExpanded(false)}
            variant="ghost"
            size="sm"
            className="text-gray-400 hover:text-white"
          >
            ‚úï
          </Button>
        )}
      </div>
      
      <p className="text-gray-300 mb-6">
        –ü–æ–¥–∫–ª—é—á–∏—Ç–µ API –∫–ª—é—á–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –ê–Ω—é—Ç—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º.
      </p>

      <div className="space-y-6">
        {/* OpenAI */}
        <div className="space-y-3">
          <div className="flex items-center justify-between">
            <label className="block text-sm font-medium text-gray-300">
              üß† OpenAI API Key (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
            </label>
            <div className="flex items-center text-xs text-gray-400">
              {apiKeys.openai ? 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω' : 'üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
            </div>
          </div>
          <div className="flex gap-2">
            <Input
              type={showKeys ? 'text' : 'password'}
              value={openaiKey}
              onChange={(e) => setOpenaiKey(e.target.value)}
              placeholder="sk-proj-..."
              className="bg-gray-700 border-gray-600 text-white"
            />
            <Button onClick={handleOpenAISubmit} className="bg-blue-600 hover:bg-blue-700">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </Button>
          </div>
        </div>

        {/* Russian API */}
        <div className="space-y-3">
          <div className="flex items-center justify-between">
            <label className="block text-sm font-medium text-gray-300">
              üá∑üá∫ –†—É—Å—Å–∫–∏–π API (GigaChat/YandexGPT)
            </label>
            <div className="flex items-center text-xs text-gray-400">
              {apiKeys.russian_api ? 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω' : 'üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
            </div>
          </div>
          <div className="flex gap-2">
            <Input
              type={showKeys ? 'text' : 'password'}
              value={russianKey}
              onChange={(e) => setRussianKey(e.target.value)}
              placeholder="–ö–ª—é—á –æ—Ç GigaChat –∏–ª–∏ YandexGPT..."
              className="bg-gray-700 border-gray-600 text-white"
            />
            <Button onClick={handleRussianSubmit} className="bg-red-600 hover:bg-red-700">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </Button>
          </div>
        </div>

        {/* ElevenLabs */}
        <div className="space-y-3">
          <div className="flex items-center justify-between">
            <label className="block text-sm font-medium text-gray-300">
              üé§ ElevenLabs API (–¥–ª—è –≥–æ–ª–æ—Å–∞)
            </label>
            <div className="flex items-center text-xs text-gray-400">
              {apiKeys.elevenlabs ? 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω' : 'üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
            </div>
          </div>
          <div className="flex gap-2">
            <Input
              type={showKeys ? 'text' : 'password'}
              value={elevenLabsKey}
              onChange={(e) => setElevenLabsKey(e.target.value)}
              placeholder="–ö–ª—é—á –æ—Ç ElevenLabs..."
              className="bg-gray-700 border-gray-600 text-white"
            />
            <Button onClick={handleElevenLabsSubmit} className="bg-purple-600 hover:bg-purple-700">
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </Button>
          </div>
        </div>

        {/* –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∫–ª—é—á–∏ */}
        <div className="flex justify-between items-center">
          <Button 
            type="button" 
            variant="outline" 
            onClick={() => setShowKeys(!showKeys)}
            className="border-gray-600"
          >
            {showKeys ? <EyeOff className="w-4 h-4 mr-2" /> : <Eye className="w-4 h-4 mr-2" />}
            {showKeys ? '–°–∫—Ä—ã—Ç—å –∫–ª—é—á–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –∫–ª—é—á–∏'}
          </Button>
          <Link to="/api-settings">
            <Button variant="outline" className="border-gray-600">
              <Settings className="w-4 h-4 mr-2" />
              –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
          </Link>
        </div>
      </div>

      <div className="mt-6 space-y-3">
        <div className="p-3 bg-blue-900/20 border border-blue-500/30 rounded">
          <p className="text-xs text-blue-300">
            üí° OpenAI: –°–∞–º—ã–π –º–æ—â–Ω—ã–π —Ä–∞–∑—É–º –¥–ª—è –ê–Ω—é—Ç—ã
          </p>
        </div>
        <div className="p-3 bg-red-900/20 border border-red-500/30 rounded">
          <p className="text-xs text-red-300">
            üá∑üá∫ –†—É—Å—Å–∫–∏–µ –º–æ–¥–µ–ª–∏: –ò–¥–µ–∞–ª—å–Ω—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
          </p>
        </div>
        <div className="p-3 bg-purple-900/20 border border-purple-500/30 rounded">
          <p className="text-xs text-purple-300">
            üé§ ElevenLabs: –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ–ª–æ—Å
          </p>
        </div>
        <div className="p-3 bg-green-900/20 border border-green-500/30 rounded">
          <p className="text-xs text-green-300">
            ü§ñ –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º: –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ API –∫–ª—é—á–µ–π, –Ω–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º
          </p>
        </div>
      </div>
    </Card>
  );
};

export default ApiKeySetup;
