
import React, { useState, useEffect } from 'react';
import ProtectedRoute from '../components/ProtectedRoute';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';

const APISettings = () => {
  const [elevenLabsKey, setElevenLabsKey] = useState('');
  const [openAIKey, setOpenAIKey] = useState('');
  const [smsApiKey, setSmsApiKey] = useState('');
  const [webScrapingEnabled, setWebScrapingEnabled] = useState(false);
  const { toast } = useToast();

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    setElevenLabsKey(localStorage.getItem('elevenlabs_key') || '');
    setOpenAIKey(localStorage.getItem('openai_key') || '');
    setSmsApiKey(localStorage.getItem('sms_api_key') || '');
    setWebScrapingEnabled(localStorage.getItem('web_scraping') === 'true');
  }, []);

  const saveElevenLabsKey = () => {
    localStorage.setItem('elevenlabs_key', elevenLabsKey);
    toast({ description: 'üé§ ElevenLabs API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω' });
  };

  const saveOpenAIKey = () => {
    localStorage.setItem('openai_key', openAIKey);
    toast({ description: 'üß† OpenAI API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω' });
  };

  const saveSmsKey = () => {
    localStorage.setItem('sms_api_key', smsApiKey);
    toast({ description: 'üì± SMS API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω' });
  };

  const toggleWebScraping = () => {
    const newState = !webScrapingEnabled;
    setWebScrapingEnabled(newState);
    localStorage.setItem('web_scraping', newState.toString());
    toast({ description: newState ? 'üåê –í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω' : 'üåê –í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω' });
  };

  return (
    <ProtectedRoute>
      <div className="flex-1 p-6 bg-gray-900 text-white min-h-screen">
        <div className="max-w-4xl mx-auto">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-purple-400 mb-2">‚öôÔ∏è API –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
            <p className="text-gray-400">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–∏—Å–∞–º</p>
          </div>

          <div className="space-y-6">
            {/* ElevenLabs API */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold">üé§ ElevenLabs API</h3>
                <Badge variant="outline" className="text-green-400 border-green-400">
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞
                </Badge>
              </div>
              <div className="space-y-4">
                <Input
                  type="password"
                  value={elevenLabsKey}
                  onChange={(e) => setElevenLabsKey(e.target.value)}
                  placeholder="sk_..."
                  className="bg-gray-700 border-gray-600 text-white"
                />
                <Button onClick={saveElevenLabsKey} className="bg-purple-600 hover:bg-purple-700">
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å ElevenLabs –∫–ª—é—á
                </Button>
                <p className="text-sm text-gray-400">
                  –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ <a href="https://elevenlabs.io" target="_blank" className="text-purple-400 hover:underline">elevenlabs.io</a>
                </p>
              </div>
            </Card>

            {/* OpenAI API */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold">üß† OpenAI API</h3>
                <Badge variant="outline" className="text-blue-400 border-blue-400">
                  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GPT –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è
                </Badge>
              </div>
              <div className="space-y-4">
                <Input
                  type="password"
                  value={openAIKey}
                  onChange={(e) => setOpenAIKey(e.target.value)}
                  placeholder="sk-..."
                  className="bg-gray-700 border-gray-600 text-white"
                />
                <Button onClick={saveOpenAIKey} className="bg-blue-600 hover:bg-blue-700">
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å OpenAI –∫–ª—é—á
                </Button>
                <p className="text-sm text-gray-400">
                  –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ <a href="https://platform.openai.com" target="_blank" className="text-blue-400 hover:underline">platform.openai.com</a>
                </p>
              </div>
            </Card>

            {/* SMS API */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold">üì± SMS API</h3>
                <Badge variant="outline" className="text-orange-400 border-orange-400">
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                </Badge>
              </div>
              <div className="space-y-4">
                <Input
                  type="password"
                  value={smsApiKey}
                  onChange={(e) => setSmsApiKey(e.target.value)}
                  placeholder="API –∫–ª—é—á SMS —Å–µ—Ä–≤–∏—Å–∞"
                  className="bg-gray-700 border-gray-600 text-white"
                />
                <Button onClick={saveSmsKey} className="bg-orange-600 hover:bg-orange-700">
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å SMS –∫–ª—é—á
                </Button>
              </div>
            </Card>

            {/* –í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold">üåê –í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥</h3>
                <Badge variant="outline" className={webScrapingEnabled ? "text-green-400 border-green-400" : "text-gray-400 border-gray-400"}>
                  {webScrapingEnabled ? '–í–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}
                </Badge>
              </div>
              <div className="space-y-4">
                <p className="text-gray-300">
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                </p>
                <Button 
                  onClick={toggleWebScraping}
                  className={webScrapingEnabled ? "bg-red-600 hover:bg-red-700" : "bg-green-600 hover:bg-green-700"}
                >
                  {webScrapingEnabled ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'} –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥
                </Button>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </ProtectedRoute>
  );
};

export default APISettings;
