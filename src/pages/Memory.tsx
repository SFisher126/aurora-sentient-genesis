
import React, { useState, useEffect } from 'react';
import ProtectedRoute from '../components/ProtectedRoute';
import { useRealAI } from '../hooks/useRealAI';
import { authService } from '../services/authService';

const Memory = () => {
  const [personalMemory, setPersonalMemory] = useState<any>(null);
  const { getPersonalMemory } = useRealAI();

  useEffect(() => {
    const user = authService.getCurrentUser();
    if (user) {
      const memory = getPersonalMemory(user.id);
      setPersonalMemory(memory);
    }
  }, [getPersonalMemory]);

  return (
    <ProtectedRoute>
      <div className="flex-1 p-6 bg-gray-900 text-white min-h-screen">
        <div className="max-w-4xl mx-auto">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-purple-400 mb-2">üß† –ü–∞–º—è—Ç—å –ê–Ω—é—Ç—ã</h1>
            <p className="text-gray-400">–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –∑–Ω–∞–Ω–∏—è –æ –≤–∞—Å</p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-gray-800 rounded-lg p-6">
              <h3 className="text-xl font-semibold mb-4">üìù –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç—ã</h3>
              {personalMemory?.facts?.length > 0 ? (
                <ul className="space-y-2">
                  {personalMemory.facts.map((fact: string, index: number) => (
                    <li key={index} className="text-gray-300">‚Ä¢ {fact}</li>
                  ))}
                </ul>
              ) : (
                <p className="text-gray-400">–ê–Ω—é—Ç–∞ –µ—â–µ –∏–∑—É—á–∞–µ—Ç –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è...</p>
              )}
            </div>

            <div className="bg-gray-800 rounded-lg p-6">
              <h3 className="text-xl font-semibold mb-4">üí¨ –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤</h3>
              {personalMemory?.conversationHistory?.length > 0 ? (
                <div className="space-y-2">
                  <p className="text-gray-300">–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: {personalMemory.conversationHistory.length}</p>
                  <p className="text-gray-300">–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä: {new Date(personalMemory.conversationHistory[personalMemory.conversationHistory.length - 1]?.timestamp).toLocaleDateString()}</p>
                </div>
              ) : (
                <p className="text-gray-400">–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é</p>
              )}
            </div>

            <div className="bg-gray-800 rounded-lg p-6">
              <h3 className="text-xl font-semibold mb-4">‚ù§Ô∏è –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞</h3>
              {personalMemory?.emotionalProfile ? (
                <div className="space-y-2">
                  <p className="text-gray-300">–î–æ–º–∏–Ω–∏—Ä—É—é—â–∞—è —ç–º–æ—Ü–∏—è: <span className="text-purple-400">{personalMemory.emotionalProfile.dominantEmotion}</span></p>
                  <p className="text-gray-300">–ó–∞–ø–∏—Å–µ–π: {personalMemory.emotionalProfile.emotionalHistory.length}</p>
                </div>
              ) : (
                <p className="text-gray-400">–ê–Ω—é—Ç–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —ç–º–æ—Ü–∏–∏ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ</p>
              )}
            </div>

            <div className="bg-gray-800 rounded-lg p-6">
              <h3 className="text-xl font-semibold mb-4">üéØ –¶–µ–ª–∏ –∏ –ø–ª–∞–Ω—ã</h3>
              <p className="text-gray-400">–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            </div>
          </div>
        </div>
      </div>
    </ProtectedRoute>
  );
};

export default Memory;
