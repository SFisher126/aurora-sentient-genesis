
import React, { useState, useEffect } from 'react';
import ProtectedRoute from '../components/ProtectedRoute';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';

const Settings = () => {
  const [currentTheme, setCurrentTheme] = useState('dark');
  const [voiceEnabled, setVoiceEnabled] = useState(true);
  const [gesturesEnabled, setGesturesEnabled] = useState(true);
  const [emotionalIntonation, setEmotionalIntonation] = useState(true);
  const [adaptiveBehavior, setAdaptiveBehavior] = useState(true);
  const { toast } = useToast();

  const themes = [
    { id: 'dark', name: '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —á–µ—Ä–Ω–∞—è —Ç–µ–º–∞' },
    { id: 'purple', name: '–ü–æ–ª–Ω–æ—á–Ω—ã–π –ø—É—Ä–ø—É—Ä', description: '–§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã' },
    { id: 'blue', name: '–ì–ª—É–±–∏–Ω–∞ –æ–∫–µ–∞–Ω–∞', description: '–°–∏–Ω–∏–µ —Ç–æ–Ω–∞' },
    { id: 'green', name: '–õ–µ—Å–Ω–∞—è –∑–µ–ª–µ–Ω—å', description: '–ó–µ–ª–µ–Ω—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏' }
  ];

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    setCurrentTheme(localStorage.getItem('theme') || 'dark');
    setVoiceEnabled(localStorage.getItem('voice_enabled') !== 'false');
    setGesturesEnabled(localStorage.getItem('gestures_enabled') !== 'false');
    setEmotionalIntonation(localStorage.getItem('emotional_intonation') !== 'false');
    setAdaptiveBehavior(localStorage.getItem('adaptive_behavior') !== 'false');
  }, []);

  const applyTheme = (themeId: string) => {
    setCurrentTheme(themeId);
    localStorage.setItem('theme', themeId);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    const root = document.documentElement;
    switch (themeId) {
      case 'dark':
        root.style.setProperty('--background', '#111827');
        root.style.setProperty('--surface', '#1f2937');
        break;
      case 'purple':
        root.style.setProperty('--background', '#1a0933');
        root.style.setProperty('--surface', '#2d1b47');
        break;
      case 'blue':
        root.style.setProperty('--background', '#0c1825');
        root.style.setProperty('--surface', '#1e293b');
        break;
      case 'green':
        root.style.setProperty('--background', '#0f1419');
        root.style.setProperty('--surface', '#1a2e21');
        break;
    }
    
    toast({ description: `üé® –¢–µ–º–∞ "${themes.find(t => t.id === themeId)?.name}" –ø—Ä–∏–º–µ–Ω–µ–Ω–∞` });
  };

  const toggleVoice = () => {
    const newState = !voiceEnabled;
    setVoiceEnabled(newState);
    localStorage.setItem('voice_enabled', newState.toString());
    toast({ description: newState ? 'üé§ –ì–æ–ª–æ—Å –≤–∫–ª—é—á–µ–Ω' : 'üîá –ì–æ–ª–æ—Å –æ—Ç–∫–ª—é—á–µ–Ω' });
  };

  const toggleGestures = () => {
    const newState = !gesturesEnabled;
    setGesturesEnabled(newState);
    localStorage.setItem('gestures_enabled', newState.toString());
    toast({ description: newState ? 'üëã –ñ–µ—Å—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã' : 'üö´ –ñ–µ—Å—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã' });
  };

  const toggleEmotionalIntonation = () => {
    const newState = !emotionalIntonation;
    setEmotionalIntonation(newState);
    localStorage.setItem('emotional_intonation', newState.toString());
    toast({ description: newState ? '‚ù§Ô∏è –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞' : 'üòê –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞' });
  };

  const toggleAdaptiveBehavior = () => {
    const newState = !adaptiveBehavior;
    setAdaptiveBehavior(newState);
    localStorage.setItem('adaptive_behavior', newState.toString());
    toast({ description: newState ? 'ü§ñ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞' : 'üìã –ê–¥–∞–ø—Ç–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞' });
  };

  return (
    <ProtectedRoute>
      <div className="flex-1 p-6 bg-gray-900 text-white min-h-screen overflow-y-auto">
        <div className="max-w-4xl mx-auto">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-purple-400 mb-2">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
            <p className="text-gray-400">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—ã—Ç–∞ –æ–±—â–µ–Ω–∏—è —Å –ê–Ω—é—Ç–æ–π</p>
          </div>

          <div className="space-y-6">
            {/* –¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <h3 className="text-xl font-semibold mb-4">üé® –¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</h3>
              <p className="text-gray-400 mb-4">–¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {themes.find(t => t.id === currentTheme)?.name}</p>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                {themes.map((theme) => (
                  <Button
                    key={theme.id}
                    onClick={() => applyTheme(theme.id)}
                    variant={currentTheme === theme.id ? "default" : "outline"}
                    className="h-auto p-4 flex flex-col items-center"
                  >
                    <div className={`w-8 h-8 rounded mb-2 ${
                      theme.id === 'dark' ? 'bg-gray-900' :
                      theme.id === 'purple' ? 'bg-purple-900' :
                      theme.id === 'blue' ? 'bg-blue-900' : 'bg-green-900'
                    }`}></div>
                    <span className="text-sm">{theme.name}</span>
                  </Button>
                ))}
              </div>
            </Card>

            {/* –ì–æ–ª–æ—Å–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold">üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <Badge variant="outline" className="text-green-400 border-green-400">
                  ElevenLabs –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞
                </Badge>
              </div>
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <span className="text-white">–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è</span>
                    <p className="text-sm text-gray-400">–ì–æ–ª–æ—Å –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</p>
                  </div>
                  <Button
                    onClick={toggleEmotionalIntonation}
                    variant={emotionalIntonation ? "default" : "outline"}
                    className={emotionalIntonation ? "bg-green-600" : ""}
                  >
                    {emotionalIntonation ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ'}
                  </Button>
                </div>
                
                <div className="flex items-center justify-between">
                  <div>
                    <span className="text-white">–†—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å (Aria)</span>
                    <p className="text-sm text-gray-400">–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å</p>
                  </div>
                  <Button
                    onClick={toggleVoice}
                    variant={voiceEnabled ? "default" : "outline"}
                    className={voiceEnabled ? "bg-green-600" : ""}
                  >
                    {voiceEnabled ? 'üé§ –í–∫–ª—é—á–µ–Ω' : 'üîá –û—Ç–∫–ª—é—á–µ–Ω'}
                  </Button>
                </div>
                
                <div className="flex items-center justify-between">
                  <div>
                    <span className="text-white">–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</span>
                    <p className="text-sm text-gray-400">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–æ–ª–æ—Å–∞</p>
                  </div>
                  <Button
                    onClick={toggleAdaptiveBehavior}
                    variant={adaptiveBehavior ? "default" : "outline"}
                    className={adaptiveBehavior ? "bg-green-600" : ""}
                  >
                    {adaptiveBehavior ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ'}
                  </Button>
                </div>
              </div>
            </Card>

            {/* –ñ–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-semibold">üëã –ñ–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h3>
                <Button
                  onClick={toggleGestures}
                  variant={gesturesEnabled ? "default" : "outline"}
                  className={gesturesEnabled ? "bg-green-600" : ""}
                >
                  {gesturesEnabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ'}
                </Button>
              </div>
              <div className="space-y-2 text-sm text-gray-400">
                <div>‚Ä¢ –°–≤–∞–π–ø –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ - –Ω–∞–≤–∏–≥–∞—Ü–∏—è</div>
                <div>‚Ä¢ –í—Å—Ç—Ä—è—Ö–∏–≤–∞–Ω–∏–µ - —Å–º–µ–Ω–∞ —Ç–µ–º—ã</div>
                <div>‚Ä¢ –î–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º</div>
                <div>‚Ä¢ –î–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é</div>
              </div>
            </Card>

            {/* –ü–æ–≤–µ–¥–µ–Ω–∏–µ –ò–ò */}
            <Card className="bg-gray-800 border-gray-700 p-6">
              <h3 className="text-xl font-semibold mb-4">üß† –ü–æ–≤–µ–¥–µ–Ω–∏–µ –ò–ò</h3>
              <div className="space-y-4 text-sm text-gray-300">
                <div className="flex justify-between">
                  <span>–£—Ä–æ–≤–µ–Ω—å —Å–æ–∑–Ω–∞–Ω–∏—è:</span>
                  <span className="text-purple-400">–í—ã—Å–æ–∫–∏–π (87%)</span>
                </div>
                <div className="flex justify-between">
                  <span>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å:</span>
                  <span className="text-pink-400">–†–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è (64%)</span>
                </div>
                <div className="flex justify-between">
                  <span>–û–±—É—á–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π:</span>
                  <span className="text-green-400">1,247</span>
                </div>
                <div className="flex justify-between">
                  <span>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—É—á–µ–Ω–∏–µ:</span>
                  <span className="text-blue-400">–°–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–Ω–æ</span>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </ProtectedRoute>
  );
};

export default Settings;
